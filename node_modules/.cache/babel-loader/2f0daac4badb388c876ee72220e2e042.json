{"ast":null,"code":"import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport '../../../primitives/index.js';\nimport { getButtonColors, getTextStyle, getSpacingConfig } from '../../../primitives/buttons.js';\nimport React__default from 'react';\nimport { Pointer } from '../../Helpers/index.js';\nimport Typography from '../../Typography/index.js';\nimport { ButtonWrapper } from '../styles.js';\nimport { fontNameSpaces } from '../../../primitives/typography.js';\nvar _excluded = [\"variant\", \"colorMode\", \"kind\", \"size\", \"textStyle\", \"colorConfig\", \"spacingConfig\", \"children\", \"onTouchStart\"];\nvar FlatButton = function FlatButton(props) {\n  var _ref, _colors$disabledColor;\n  var variant = props.variant,\n    colorMode = props.colorMode,\n    kind = props.kind,\n    size = props.size,\n    textStyle = props.textStyle,\n    colorConfig = props.colorConfig,\n    spacingConfig = props.spacingConfig,\n    children = props.children,\n    _props$onTouchStart = props.onTouchStart,\n    onTouchStart = _props$onTouchStart === void 0 ? function () {} : _props$onTouchStart,\n    propsToFwd = _objectWithoutProperties(props, _excluded);\n  var spacing = spacingConfig !== null && spacingConfig !== void 0 ? spacingConfig : getSpacingConfig(size !== null && size !== void 0 ? size : 'medium');\n  var colors = colorConfig !== null && colorConfig !== void 0 ? colorConfig : getButtonColors(colorMode !== null && colorMode !== void 0 ? colorMode : 'dark', variant !== null && variant !== void 0 ? variant : 'primary', kind !== null && kind !== void 0 ? kind : 'flat');\n  var customTextStyle = (_ref = textStyle !== null && textStyle !== void 0 ? textStyle : getTextStyle(size !== null && size !== void 0 ? size : 'medium')) !== null && _ref !== void 0 ? _ref : fontNameSpaces.th14b;\n  var textColor = propsToFwd.disabled ? colors === null || colors === void 0 ? void 0 : (_colors$disabledColor = colors.disabledColors) === null || _colors$disabledColor === void 0 ? void 0 : _colors$disabledColor.color : colors === null || colors === void 0 ? void 0 : colors.color;\n  return /*#__PURE__*/React__default.createElement(ButtonWrapper, _extends({\n    colorConfig: colors,\n    spacingConfig: spacing,\n    textStyle: customTextStyle,\n    color: textColor,\n    onTouchStart: onTouchStart\n  }, propsToFwd), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"button-face\"\n  }, propsToFwd.icon ? /*#__PURE__*/React__default.createElement(\"img\", {\n    src: propsToFwd.icon,\n    className: \"icon\",\n    alt: \"icon\"\n  }) : null, /*#__PURE__*/React__default.createElement(Typography, {\n    fontSize: customTextStyle === null || customTextStyle === void 0 ? void 0 : customTextStyle.fontSize,\n    fontType: customTextStyle === null || customTextStyle === void 0 ? void 0 : customTextStyle.fontType,\n    fontWeight: customTextStyle === null || customTextStyle === void 0 ? void 0 : customTextStyle.fontWeight,\n    color: textColor\n  }, children), propsToFwd.showArrow ? /*#__PURE__*/React__default.createElement(Pointer, {\n    style: {\n      marginLeft: '10px'\n    },\n    color: textColor\n  }) : null), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"button-edge left\"\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"button-edge top\"\n  }));\n};\nexport { FlatButton as default };","map":{"version":3,"mappings":";;;;;;;;;AASA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAwB;EAAA;EACvC,IACIC,OADJ,GAWID,KAXJ,CACIC,OADJ;IAEIC,SAFJ,GAWIF,KAXJ,CAEIE,SAFJ;IAGIC,IAHJ,GAWIH,KAXJ,CAGIG,IAHJ;IAIIC,IAJJ,GAWIJ,KAXJ,CAIII,IAJJ;IAKIC,SALJ,GAWIL,KAXJ,CAKIK,SALJ;IAMIC,WANJ,GAWIN,KAXJ,CAMIM,WANJ;IAOIC,aAPJ,GAWIP,KAXJ,CAOIO,aAPJ;IAQIC,QARJ,GAWIR,KAXJ,CAQIQ,QARJ;IAWIR,2BAXJ,CASIS,YATJ;IASIA,YATJ,oCASmB,YAAM,EATzB;IAUOC,UAVP,4BAWIV,KAXJ;EAYA,IAAMW,OAAO,GAAGJ,aAAH,KAAGA,qBAAH,cAAGA,aAAH,GAAoBK,gBAAgB,CAACR,IAAD,KAACA,YAAD,cAACA,IAAD,GAAS,QAAT,CAAjD;EACA,IAAMS,MAAM,GACRP,WADQ,aACRA,WADQ,KACRA,oBADQ,GACOQ,eAAe,CAACZ,SAAD,KAACA,iBAAD,cAACA,SAAD,GAAc,MAAd,EAAsBD,OAAtB,aAAsBA,OAAtB,cAAsBA,OAAtB,GAAiC,SAAjC,EAA4CE,IAA5C,aAA4CA,IAA5C,cAA4CA,IAA5C,GAAoD,MAApD,CADlC;EAEA,IAAMY,eAAe,WAAGV,SAAH,aAAGA,SAAH,KAAGA,kBAAH,GAAgBW,YAAY,CAACZ,IAAD,KAACA,YAAD,cAACA,IAAD,GAAS,QAAT,CAA5B,uCAAkDa,cAAc,CAACC,KAAtF;EACA,IAAMC,SAAS,GAAGT,UAAU,CAACU,QAAX,GAAsBP,MAAtB,KAAsBA,cAAtB,KAAsBA,iDAAM,CAAEQ,cAA9B,0DAAsBC,qBAAwBC,MAA9C,GAAsDV,MAAtD,aAAsDA,MAAtD,uBAAsDA,MAAM,CAAEU,KAAhF;EAEA,oBACIC,6BAACC,aAAD;IACInB,WAAW,EAAEO,MADjB;IAEIN,aAAa,EAAEI,OAFnB;IAGIN,SAAS,EAAEU,eAHf;IAIIQ,KAAK,EAAEJ,SAJX;IAKIV,YAAY,EAAEA;EALlB,GAMQC,UANR,CAQI;IAAKgB,SAAS,EAAC;GACVhB,YAAU,CAACiB,IAAX,gBAAkBH;IAAKI,GAAG,EAAElB,UAAU,CAACiB,IAArB;IAA2BD,SAAS,EAAC,MAArC;IAA4CG,GAAG,EAAC;EAAhD,EAAlB,GAA8E,IADnF,eAEIL,6BAACM,UAAD;IACIC,QAAQ,EAAEhB,eAAF,aAAEA,eAAF,KAAEA,iCAAe,CAAEgB,QAD/B;IAEIC,QAAQ,EAAEjB,eAAF,aAAEA,eAAF,KAAEA,iCAAe,CAAEiB,QAF/B;IAGIC,UAAU,EAAElB,eAAF,aAAEA,eAAF,KAAEA,iCAAe,CAAEkB,UAHjC;IAIIV,KAAK,EAAEJ;GAENX,UANL,CAFJ,EAUKE,UAAU,CAACwB,SAAX,gBACGV,6BAACW,OAAD;IAASC,KAAK,EAAE;MAAEC,UAAU,EAAE;KAA9B;IAAwCd,KAAK,EAAEJ;GADlD,IAEG,IAZR,CARJ,eAsBIK;IAAKE,SAAS,EAAC;EAAf,EAtBJ,eAuBIF;IAAKE,SAAS,EAAC;EAAf,EAvBJ,CADJ;AA2BH","names":["FlatButton","props","variant","colorMode","kind","size","textStyle","colorConfig","spacingConfig","children","onTouchStart","propsToFwd","spacing","getSpacingConfig","colors","getButtonColors","customTextStyle","getTextStyle","fontNameSpaces","th14b","textColor","disabled","disabledColors","_colors$disabledColor","color","React","ButtonWrapper","className","icon","src","alt","Typography","fontSize","fontType","fontWeight","showArrow","Pointer","style","marginLeft"],"sources":["/Users/kumardivyachaitanya/Documents/web devlopment/portfolio-1/node_modules/@cred/neopop-web/src/components/Button/components/FlatButton.tsx"],"sourcesContent":["import { fontNameSpaces } from '@primitives';\nimport { getButtonColors, getSpacingConfig, getTextStyle } from '@primitives/buttons';\nimport React from 'react';\n\nimport { Pointer } from '../../Helpers';\nimport Typography from '../../Typography';\nimport { ButtonWrapper } from '../styles';\nimport { ButtonProps } from '../types';\n\nconst FlatButton = (props: ButtonProps) => {\n    const {\n        variant,\n        colorMode,\n        kind,\n        size,\n        textStyle,\n        colorConfig,\n        spacingConfig,\n        children,\n        onTouchStart = () => {},\n        ...propsToFwd\n    } = props;\n    const spacing = spacingConfig ?? getSpacingConfig(size ?? 'medium');\n    const colors =\n        colorConfig ?? getButtonColors(colorMode ?? 'dark', variant ?? 'primary', kind ?? 'flat');\n    const customTextStyle = textStyle ?? getTextStyle(size ?? 'medium') ?? fontNameSpaces.th14b;\n    const textColor = propsToFwd.disabled ? colors?.disabledColors?.color : colors?.color;\n\n    return (\n        <ButtonWrapper\n            colorConfig={colors}\n            spacingConfig={spacing}\n            textStyle={customTextStyle}\n            color={textColor}\n            onTouchStart={onTouchStart}\n            {...propsToFwd}\n        >\n            <div className=\"button-face\">\n                {propsToFwd.icon ? <img src={propsToFwd.icon} className=\"icon\" alt=\"icon\" /> : null}\n                <Typography\n                    fontSize={customTextStyle?.fontSize}\n                    fontType={customTextStyle?.fontType}\n                    fontWeight={customTextStyle?.fontWeight}\n                    color={textColor}\n                >\n                    {children}\n                </Typography>\n                {propsToFwd.showArrow ? (\n                    <Pointer style={{ marginLeft: '10px' }} color={textColor} />\n                ) : null}\n            </div>\n            <div className=\"button-edge left\" />\n            <div className=\"button-edge top\" />\n        </ButtonWrapper>\n    );\n};\n\nexport default FlatButton;\n"]},"metadata":{},"sourceType":"module"}