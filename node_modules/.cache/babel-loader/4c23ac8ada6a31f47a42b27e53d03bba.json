{"ast":null,"code":"import { hexToRGBA, mergeDeep } from '../utils/index.js';\nimport { FontOpacity } from './opacity.js';\nvar mainColors = Object.freeze({\n  black: '#0d0d0d',\n  white: '#ffffff',\n  red: '#EE4D37',\n  yellow: '#F08D32',\n  blue: '#144CC7',\n  green: '#06C270'\n});\nvar colorPalette = Object.freeze({\n  white: {\n    50: '#E0E0E0',\n    70: '#EFEFEF',\n    90: '#FBFBFB'\n  },\n  popWhite: {\n    100: '#D2D2D2',\n    200: '#E0E0E0',\n    300: '#EFEFEF',\n    400: '#FBFBFB',\n    500: '#ffffff'\n  },\n  popBlack: {\n    100: '#8A8A8A',\n    200: '#3D3D3D',\n    300: '#161616',\n    400: '#121212',\n    500: '#0d0d0d'\n  },\n  black: {\n    50: '#8A8A8A',\n    70: '#3D3D3D',\n    90: '#161616',\n    100: '#121212'\n  },\n  poliPurple: {\n    100: '#E8DFFF',\n    200: '#D2C2FF',\n    300: '#B49AFF',\n    400: '#9772FF',\n    500: '#6A35FF',\n    600: '#4A25B3',\n    700: '#351A80',\n    800: '#20104D'\n  },\n  rss: {\n    100: '#FFEFE6',\n    200: '#FFDBC7',\n    300: '#FFC3A2',\n    400: '#FFAB7C',\n    500: '#FF8744',\n    600: '#B35F30',\n    700: '#804322',\n    800: '#4D2914'\n  },\n  pinkPong: {\n    100: '#FFE1E9',\n    200: '#FFC6D4',\n    300: '#FFA0B7',\n    400: '#FF7B9A',\n    500: '#FF426F',\n    600: '#B32E4E',\n    700: '#802138',\n    800: '#4D1421'\n  },\n  mannna: {\n    100: '#FFF8E5',\n    200: '#FFEFC7',\n    300: '#FFE5A2',\n    400: '#FFDB7D',\n    500: '#FFCB45',\n    600: '#B38E30',\n    700: '#806623',\n    800: '#4D3D15'\n  },\n  neoPaccha: {\n    100: '#FBFFE6',\n    200: '#F7FFC6',\n    300: '#F2FF9F',\n    400: '#EDFE79',\n    500: '#E5FE40',\n    600: '#A0B22D',\n    700: '#727F20',\n    800: '#454C13'\n  },\n  yoyo: {\n    100: '#F4E5FF',\n    200: '#E5C5FF',\n    300: '#D59FFF',\n    400: '#C379FF',\n    500: '#AA3FFF',\n    600: '#772CB3',\n    700: '#552080',\n    800: '#33134D'\n  },\n  error: {\n    100: '#FCE2DD',\n    200: '#F6A69B',\n    300: '#F47564',\n    400: '#F05E4B',\n    500: '#EE4D37'\n  },\n  warning: {\n    100: '#FBDDC2',\n    200: '#F8C699',\n    300: '#F5AC6A',\n    400: '#F29947',\n    500: '#F08D32'\n  },\n  info: {\n    100: '#C2D0F2',\n    200: '#89A5E3',\n    300: '#3F6FD9',\n    400: '#2C5ECD',\n    500: '#144CC7'\n  },\n  success: {\n    100: '#E6F9F1',\n    200: '#83E0B8',\n    300: '#4FE3A3',\n    400: '#1FC87F',\n    500: '#06C270'\n  }\n});\nvar getDarkThemedColors = function getDarkThemedColors() {\n  return {\n    font: {\n      heading: hexToRGBA(mainColors.white, FontOpacity.HEADING),\n      subHeading: hexToRGBA(mainColors.white, FontOpacity.SUB_HEADING),\n      bodyText: hexToRGBA(mainColors.white, FontOpacity.BODY_TEXT),\n      bodyTextLighter: hexToRGBA(mainColors.white, FontOpacity.BODY_TEXT_LIGHTER)\n    },\n    containerCard: {\n      background: colorPalette.black[100],\n      stroke: 'rgba(255,255,255,0.1)'\n    },\n    bottomSheet: {},\n    toast: {\n      success: {\n        background: mainColors.green,\n        color: '#F8F8F8'\n      },\n      warning: {\n        background: mainColors.yellow,\n        color: '#F8F8F8'\n      },\n      error: {\n        background: mainColors.red,\n        color: '#F8F8F8'\n      }\n    },\n    searchBar: {\n      border: colorPalette.black[70],\n      activeBorder: mainColors.white,\n      backgroundColor: colorPalette.popBlack[400],\n      closeIcon: colorPalette.popWhite[100]\n    },\n    tags: {\n      warning: {\n        background: mainColors.yellow,\n        color: colorPalette.white[90]\n      },\n      error: {\n        background: mainColors.red,\n        color: colorPalette.white[90]\n      },\n      success: {\n        background: mainColors.green,\n        color: colorPalette.white[90]\n      },\n      info: {\n        background: mainColors.blue,\n        color: colorPalette.white[90]\n      }\n    },\n    checkbox: {\n      background: mainColors.black,\n      border: mainColors.white,\n      leftPlunk: colorPalette.black[50],\n      topPlunk: colorPalette.black[70]\n    },\n    inputFields: {\n      textColor: hexToRGBA(mainColors.white, FontOpacity.HEADING),\n      labelColor: hexToRGBA(mainColors.white, FontOpacity.BODY_TEXT),\n      caretColor: mainColors.blue,\n      errorColor: mainColors.red,\n      placeholderColor: hexToRGBA(mainColors.white, 0.3)\n    },\n    toggle: {\n      on: {\n        switchBackground: '#B4EDD4',\n        switchBorder: mainColors.white,\n        buttonBackground: '#38b36f',\n        buttonBorder: '#B4EDD4',\n        buttonMarkBackground: mainColors.white\n      },\n      off: {\n        switchBackground: '#0a0a0a',\n        switchBorder: mainColors.white,\n        buttonBackground: mainColors.white,\n        buttonBorder: '#0a0a0a',\n        buttonMarkBackground: colorPalette.white[50]\n      }\n    },\n    radio: {\n      background: mainColors.black,\n      border: mainColors.white,\n      plunk: colorPalette.black[50],\n      dotBackground: mainColors.black,\n      containerConfig: {\n        color: mainColors.white,\n        backgroundColor: colorPalette.black[100],\n        borderColor: hexToRGBA(mainColors.white, 0.1),\n        activeBackgroundColor: colorPalette.poliPurple[500],\n        activeBorderColor: '#2C5ECD'\n      }\n    },\n    dropdown: {\n      withLabel: {\n        text: hexToRGBA(mainColors.white, 0.5),\n        border: hexToRGBA(mainColors.white, 0.1),\n        chevron: hexToRGBA(mainColors.white, 0.5)\n      },\n      withoutLabel: {\n        text: hexToRGBA(mainColors.white, 0.5),\n        border: mainColors.white,\n        chevron: mainColors.white\n      }\n    },\n    scoremeter: {\n      meterStrokeColor: {\n        excellent: mainColors.green,\n        average: colorPalette.neoPaccha[400],\n        poor: colorPalette.warning[400]\n      },\n      meterStrokeBackground: mainColors.black,\n      meterBorderColor: colorPalette.popBlack[200],\n      dotColor: '',\n      indicatorColors: {\n        neutral: '#e2e2e2',\n        increment: '#5CDDBE',\n        decrement: '#FFB098'\n      },\n      scoreContainerBackground: colorPalette.popBlack[300],\n      scoreContainerBorder: mainColors.black,\n      scoreColor: mainColors.white\n    },\n    buttons: {\n      primary: {\n        backgroundColor: mainColors.black,\n        color: mainColors.white,\n        edgeColors: {\n          bottom: colorPalette.black[70],\n          right: colorPalette.black[50],\n          top: colorPalette.popBlack[200],\n          left: colorPalette.popBlack[100]\n        },\n        disabledColors: {\n          backgroundColor: colorPalette.black[50],\n          color: hexToRGBA(mainColors.white, 0.5),\n          edgeColors: {\n            top: 'transparent',\n            left: 'transparent',\n            right: colorPalette.white[70],\n            bottom: colorPalette.white[50]\n          }\n        }\n      },\n      secondary: {\n        backgroundColor: mainColors.white,\n        color: mainColors.black,\n        borderColor: mainColors.black,\n        edgeColors: {\n          bottom: colorPalette.black[50],\n          right: colorPalette.white[50],\n          left: colorPalette.white[50],\n          top: '#C7C7C7'\n        },\n        disabledColors: {\n          backgroundColor: mainColors.white,\n          color: hexToRGBA(mainColors.black, 0.3),\n          borderColor: hexToRGBA(mainColors.black, 0.3),\n          edgeColors: {\n            top: 'transparent',\n            left: 'transparent',\n            right: 'transparent',\n            bottom: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\nvar getLightThemedColors = function getLightThemedColors() {\n  return {\n    font: {\n      heading: hexToRGBA(mainColors.black, FontOpacity.HEADING),\n      subHeading: hexToRGBA(mainColors.black, FontOpacity.SUB_HEADING),\n      bodyText: hexToRGBA(mainColors.black, FontOpacity.BODY_TEXT),\n      bodyTextLighter: hexToRGBA(mainColors.black, FontOpacity.BODY_TEXT_LIGHTER)\n    },\n    containerCard: {\n      background: colorPalette.black[100],\n      stroke: 'rgba(255,255,255,0.1)'\n    },\n    searchBar: {\n      border: colorPalette.white[50],\n      activeBorder: mainColors.black,\n      backgroundColor: mainColors.white,\n      closeIcon: colorPalette.white[50]\n    },\n    bottomSheet: {},\n    toast: {\n      success: {\n        background: mainColors.green,\n        color: '#F8F8F8'\n      },\n      warning: {\n        background: mainColors.yellow,\n        color: '#F8F8F8'\n      },\n      error: {\n        background: mainColors.red,\n        color: '#F8F8F8'\n      }\n    },\n    dropdown: {\n      withLabel: {\n        text: hexToRGBA(mainColors.black, 0.5),\n        border: hexToRGBA(mainColors.black, 0.1),\n        chevron: hexToRGBA(mainColors.black, 0.5)\n      },\n      withoutLabel: {\n        text: hexToRGBA(mainColors.black, 0.5),\n        border: mainColors.black,\n        chevron: mainColors.black\n      }\n    },\n    scoremeter: {\n      meterStrokeColor: {\n        excellent: mainColors.green,\n        average: colorPalette.neoPaccha[400],\n        poor: colorPalette.warning[400]\n      },\n      meterStrokeBackground: 'transparent',\n      meterBorderColor: colorPalette.popWhite[200],\n      dotColor: colorPalette.popBlack[300],\n      indicatorColors: {\n        neutral: '#e2e2e2',\n        increment: '#5CDDBE',\n        decrement: '#FFB098'\n      },\n      scoreContainerBackground: colorPalette.popWhite[300],\n      scoreContainerBorder: colorPalette.popWhite[400],\n      scoreColor: mainColors.black\n    },\n    tags: {\n      warning: {\n        background: '#FEF4EB',\n        color: mainColors.yellow\n      },\n      error: {\n        background: '#FDEDEB',\n        color: mainColors.red\n      },\n      success: {\n        background: '#E6F9F1',\n        color: mainColors.green\n      },\n      info: {\n        background: '#EBF1FE',\n        color: mainColors.blue\n      }\n    },\n    checkbox: {\n      background: mainColors.white,\n      border: mainColors.black,\n      leftPlunk: colorPalette.black[50],\n      topPlunk: colorPalette.white[50]\n    },\n    inputFields: {\n      textColor: hexToRGBA(mainColors.black, FontOpacity.HEADING),\n      labelColor: hexToRGBA(mainColors.black, FontOpacity.BODY_TEXT),\n      caretColor: mainColors.blue,\n      errorColor: mainColors.red,\n      placeholderColor: hexToRGBA(mainColors.black, 0.3)\n    },\n    buttons: {\n      primary: {\n        backgroundColor: mainColors.white,\n        color: mainColors.black,\n        edgeColors: {\n          bottom: colorPalette.black[50],\n          right: colorPalette.white[50],\n          top: colorPalette.popBlack[200],\n          left: colorPalette.popBlack[100]\n        },\n        disabledColors: {\n          backgroundColor: colorPalette.popBlack[100],\n          color: hexToRGBA(mainColors.white, 0.5),\n          edgeColors: {\n            top: 'transparent',\n            left: 'transparent',\n            right: '#B6B6B6',\n            bottom: colorPalette.popBlack[200]\n          }\n        }\n      },\n      secondary: {\n        backgroundColor: mainColors.black,\n        color: mainColors.white,\n        borderColor: mainColors.white,\n        edgeColors: {\n          bottom: colorPalette.black[50],\n          top: '#262626',\n          right: colorPalette.white[50],\n          left: '#404040'\n        },\n        disabledColors: {\n          backgroundColor: mainColors.black,\n          color: hexToRGBA(mainColors.white, 0.3),\n          borderColor: hexToRGBA(mainColors.white, 0.3),\n          edgeColors: {\n            top: 'transparent',\n            left: 'transparent',\n            right: 'transparent',\n            bottom: 'transparent'\n          }\n        }\n      }\n    },\n    toggle: {\n      on: {\n        switchBackground: '#CAFFE2',\n        switchBorder: '#0a0a0a',\n        buttonBackground: '#38b36f',\n        buttonBorder: '#F7F7F7',\n        buttonMarkBackground: mainColors.white\n      },\n      off: {\n        switchBackground: mainColors.white,\n        switchBorder: '#0a0a0a',\n        buttonBackground: colorPalette.white[50],\n        buttonBorder: mainColors.white,\n        buttonMarkBackground: mainColors.white\n      }\n    },\n    radio: {\n      background: mainColors.white,\n      border: mainColors.black,\n      plunk: colorPalette.black[50],\n      dotBackground: mainColors.white,\n      containerConfig: {\n        color: mainColors.black,\n        backgroundColor: colorPalette.black[100],\n        borderColor: hexToRGBA(mainColors.white, 0.1),\n        activeBackgroundColor: colorPalette.poliPurple[500],\n        activeBorderColor: '#2C5ECD'\n      }\n    }\n  };\n};\nvar getColorGuide = function getColorGuide() {\n  return {\n    mainAppBackground: mainColors.black,\n    darkComponents: getDarkThemedColors(),\n    lightComponents: getLightThemedColors()\n  };\n};\nvar colorGuide = getColorGuide();\nvar extend = function extend(themeOverwrite) {\n  var _themeOverwrite$mainC = themeOverwrite.mainColors,\n    userMainColors = _themeOverwrite$mainC === void 0 ? {} : _themeOverwrite$mainC,\n    _themeOverwrite$color = themeOverwrite.colorGuide,\n    userColorGuide = _themeOverwrite$color === void 0 ? {} : _themeOverwrite$color,\n    _themeOverwrite$color2 = themeOverwrite.colorPalette,\n    userColorPalette = _themeOverwrite$color2 === void 0 ? {} : _themeOverwrite$color2;\n  mainColors = Object.freeze(mergeDeep({}, mainColors, userMainColors));\n  colorPalette = Object.freeze(mergeDeep({}, colorPalette, userColorPalette));\n  colorGuide = Object.freeze(mergeDeep({}, getColorGuide(), userColorGuide));\n};\nexport { colorGuide, colorPalette, extend, mainColors };","map":{"version":3,"mappings":"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","names":["mainColors","Object","freeze","black","white","red","yellow","blue","green","colorPalette","popWhite","popBlack","poliPurple","rss","pinkPong","mannna","neoPaccha","yoyo","error","warning","info","success","getDarkThemedColors","font","heading","hexToRGBA","FontOpacity","HEADING","subHeading","SUB_HEADING","bodyText","BODY_TEXT","bodyTextLighter","BODY_TEXT_LIGHTER","containerCard","background","stroke","bottomSheet","toast","color","searchBar","border","activeBorder","backgroundColor","closeIcon","tags","checkbox","leftPlunk","topPlunk","inputFields","textColor","labelColor","caretColor","errorColor","placeholderColor","toggle","on","switchBackground","switchBorder","buttonBackground","buttonBorder","buttonMarkBackground","off","radio","plunk","dotBackground","containerConfig","borderColor","activeBackgroundColor","activeBorderColor","dropdown","withLabel","text","chevron","withoutLabel","scoremeter","meterStrokeColor","excellent","average","poor","meterStrokeBackground","meterBorderColor","dotColor","indicatorColors","neutral","increment","decrement","scoreContainerBackground","scoreContainerBorder","scoreColor","buttons","primary","edgeColors","bottom","right","top","left","disabledColors","secondary","getLightThemedColors","getColorGuide","mainAppBackground","darkComponents","lightComponents","colorGuide","extend","themeOverwrite","userMainColors","userColorGuide","userColorPalette","mergeDeep"],"sources":["/Users/kumardivyachaitanya/Documents/web devlopment/portfolio-1/node_modules/@cred/neopop-web/src/primitives/colors.ts"],"sourcesContent":["import { hexToRGBA, mergeDeep } from '../utils';\nimport { FontOpacity } from './opacity';\n\nexport let mainColors = Object.freeze({\n    black: '#0d0d0d',\n    white: '#ffffff',\n    red: '#EE4D37',\n    yellow: '#F08D32',\n    blue: '#144CC7',\n    green: '#06C270',\n});\n\nexport let colorPalette = Object.freeze({\n    white: {\n        50: '#E0E0E0',\n        70: '#EFEFEF',\n        90: '#FBFBFB',\n    },\n    popWhite: {\n        100: '#D2D2D2',\n        200: '#E0E0E0',\n        300: '#EFEFEF',\n        400: '#FBFBFB',\n        500: '#ffffff',\n    },\n    popBlack: {\n        100: '#8A8A8A',\n        200: '#3D3D3D',\n        300: '#161616',\n        400: '#121212',\n        500: '#0d0d0d',\n    },\n    black: {\n        50: '#8A8A8A',\n        70: '#3D3D3D',\n        90: '#161616',\n        100: '#121212',\n    },\n    poliPurple: {\n        100: '#E8DFFF',\n        200: '#D2C2FF',\n        300: '#B49AFF',\n        400: '#9772FF',\n        500: '#6A35FF',\n        600: '#4A25B3',\n        700: '#351A80',\n        800: '#20104D',\n    },\n    rss: {\n        100: '#FFEFE6',\n        200: '#FFDBC7',\n        300: '#FFC3A2',\n        400: '#FFAB7C',\n        500: '#FF8744',\n        600: '#B35F30',\n        700: '#804322',\n        800: '#4D2914',\n    },\n    pinkPong: {\n        100: '#FFE1E9',\n        200: '#FFC6D4',\n        300: '#FFA0B7',\n        400: '#FF7B9A',\n        500: '#FF426F',\n        600: '#B32E4E',\n        700: '#802138',\n        800: '#4D1421',\n    },\n    mannna: {\n        100: '#FFF8E5',\n        200: '#FFEFC7',\n        300: '#FFE5A2',\n        400: '#FFDB7D',\n        500: '#FFCB45',\n        600: '#B38E30',\n        700: '#806623',\n        800: '#4D3D15',\n    },\n    neoPaccha: {\n        100: '#FBFFE6',\n        200: '#F7FFC6',\n        300: '#F2FF9F',\n        400: '#EDFE79',\n        500: '#E5FE40',\n        600: '#A0B22D',\n        700: '#727F20',\n        800: '#454C13',\n    },\n    yoyo: {\n        100: '#F4E5FF',\n        200: '#E5C5FF',\n        300: '#D59FFF',\n        400: '#C379FF',\n        500: '#AA3FFF',\n        600: '#772CB3',\n        700: '#552080',\n        800: '#33134D',\n    },\n    error: {\n        100: '#FCE2DD',\n        200: '#F6A69B',\n        300: '#F47564',\n        400: '#F05E4B',\n        500: '#EE4D37',\n    },\n    warning: {\n        100: '#FBDDC2',\n        200: '#F8C699',\n        300: '#F5AC6A',\n        400: '#F29947',\n        500: '#F08D32',\n    },\n    info: {\n        100: '#C2D0F2',\n        200: '#89A5E3',\n        300: '#3F6FD9',\n        400: '#2C5ECD',\n        500: '#144CC7',\n    },\n    success: {\n        100: '#E6F9F1',\n        200: '#83E0B8',\n        300: '#4FE3A3',\n        400: '#1FC87F',\n        500: '#06C270',\n    },\n});\n\nconst getDarkThemedColors = () => ({\n    font: {\n        heading: hexToRGBA(mainColors.white, FontOpacity.HEADING),\n        subHeading: hexToRGBA(mainColors.white, FontOpacity.SUB_HEADING),\n        bodyText: hexToRGBA(mainColors.white, FontOpacity.BODY_TEXT),\n        bodyTextLighter: hexToRGBA(mainColors.white, FontOpacity.BODY_TEXT_LIGHTER),\n    },\n    containerCard: {\n        background: colorPalette.black[100],\n        stroke: 'rgba(255,255,255,0.1)',\n    },\n    bottomSheet: {},\n    toast: {\n        success: {\n            background: mainColors.green,\n            color: '#F8F8F8',\n        },\n        warning: {\n            background: mainColors.yellow,\n            color: '#F8F8F8',\n        },\n        error: {\n            background: mainColors.red,\n            color: '#F8F8F8',\n        },\n    },\n    searchBar: {\n        border: colorPalette.black[70],\n        activeBorder: mainColors.white,\n        backgroundColor: colorPalette.popBlack[400],\n        closeIcon: colorPalette.popWhite[100],\n    },\n    tags: {\n        warning: {\n            background: mainColors.yellow,\n            color: colorPalette.white[90],\n        },\n        error: {\n            background: mainColors.red,\n            color: colorPalette.white[90],\n        },\n        success: {\n            background: mainColors.green,\n            color: colorPalette.white[90],\n        },\n        info: {\n            background: mainColors.blue,\n            color: colorPalette.white[90],\n        },\n    },\n    checkbox: {\n        background: mainColors.black,\n        border: mainColors.white,\n        leftPlunk: colorPalette.black[50],\n        topPlunk: colorPalette.black[70],\n    },\n    inputFields: {\n        textColor: hexToRGBA(mainColors.white, FontOpacity.HEADING),\n        labelColor: hexToRGBA(mainColors.white, FontOpacity.BODY_TEXT),\n        caretColor: mainColors.blue,\n        errorColor: mainColors.red,\n        placeholderColor: hexToRGBA(mainColors.white, 0.3),\n    },\n    toggle: {\n        on: {\n            switchBackground: '#B4EDD4',\n            switchBorder: mainColors.white,\n            buttonBackground: '#38b36f',\n            buttonBorder: '#B4EDD4',\n            buttonMarkBackground: mainColors.white,\n        },\n        off: {\n            switchBackground: '#0a0a0a',\n            switchBorder: mainColors.white,\n            buttonBackground: mainColors.white,\n            buttonBorder: '#0a0a0a',\n            buttonMarkBackground: colorPalette.white[50],\n        },\n    },\n    radio: {\n        background: mainColors.black,\n        border: mainColors.white,\n        plunk: colorPalette.black[50],\n        dotBackground: mainColors.black,\n        containerConfig: {\n            color: mainColors.white,\n            backgroundColor: colorPalette.black[100],\n            borderColor: hexToRGBA(mainColors.white, 0.1),\n            activeBackgroundColor: colorPalette.poliPurple[500],\n            activeBorderColor: '#2C5ECD',\n        },\n    },\n    dropdown: {\n        withLabel: {\n            text: hexToRGBA(mainColors.white, 0.5),\n            border: hexToRGBA(mainColors.white, 0.1),\n            chevron: hexToRGBA(mainColors.white, 0.5),\n        },\n        withoutLabel: {\n            text: hexToRGBA(mainColors.white, 0.5),\n            border: mainColors.white,\n            chevron: mainColors.white,\n        },\n    },\n    scoremeter: {\n        meterStrokeColor: {\n            excellent: mainColors.green,\n            average: colorPalette.neoPaccha[400],\n            poor: colorPalette.warning[400],\n        },\n        meterStrokeBackground: mainColors.black,\n        meterBorderColor: colorPalette.popBlack[200],\n        dotColor: '',\n        indicatorColors: {\n            neutral: '#e2e2e2',\n            increment: '#5CDDBE',\n            decrement: '#FFB098',\n        },\n        scoreContainerBackground: colorPalette.popBlack[300],\n        scoreContainerBorder: mainColors.black,\n        scoreColor: mainColors.white,\n    },\n    buttons: {\n        primary: {\n            backgroundColor: mainColors.black,\n            color: mainColors.white,\n            edgeColors: {\n                bottom: colorPalette.black[70],\n                right: colorPalette.black[50],\n                top: colorPalette.popBlack[200],\n                left: colorPalette.popBlack[100],\n            },\n            disabledColors: {\n                backgroundColor: colorPalette.black[50],\n                color: hexToRGBA(mainColors.white, 0.5),\n                edgeColors: {\n                    top: 'transparent',\n                    left: 'transparent',\n                    right: colorPalette.white[70],\n                    bottom: colorPalette.white[50],\n                },\n            },\n        },\n        secondary: {\n            backgroundColor: mainColors.white,\n            color: mainColors.black,\n            borderColor: mainColors.black,\n            edgeColors: {\n                bottom: colorPalette.black[50],\n                right: colorPalette.white[50],\n                left: colorPalette.white[50],\n                top: '#C7C7C7',\n            },\n            disabledColors: {\n                backgroundColor: mainColors.white,\n                color: hexToRGBA(mainColors.black, 0.3),\n                borderColor: hexToRGBA(mainColors.black, 0.3),\n                edgeColors: {\n                    top: 'transparent',\n                    left: 'transparent',\n                    right: 'transparent',\n                    bottom: 'transparent',\n                },\n            },\n        },\n    },\n});\n\nconst getLightThemedColors = () => ({\n    font: {\n        heading: hexToRGBA(mainColors.black, FontOpacity.HEADING),\n        subHeading: hexToRGBA(mainColors.black, FontOpacity.SUB_HEADING),\n        bodyText: hexToRGBA(mainColors.black, FontOpacity.BODY_TEXT),\n        bodyTextLighter: hexToRGBA(mainColors.black, FontOpacity.BODY_TEXT_LIGHTER),\n    },\n    containerCard: {\n        background: colorPalette.black[100],\n        stroke: 'rgba(255,255,255,0.1)',\n    },\n    searchBar: {\n        border: colorPalette.white[50],\n        activeBorder: mainColors.black,\n        backgroundColor: mainColors.white,\n        closeIcon: colorPalette.white[50],\n    },\n    bottomSheet: {},\n    toast: {\n        success: {\n            background: mainColors.green,\n            color: '#F8F8F8',\n        },\n        warning: {\n            background: mainColors.yellow,\n            color: '#F8F8F8',\n        },\n        error: {\n            background: mainColors.red,\n            color: '#F8F8F8',\n        },\n    },\n    dropdown: {\n        withLabel: {\n            text: hexToRGBA(mainColors.black, 0.5),\n            border: hexToRGBA(mainColors.black, 0.1),\n            chevron: hexToRGBA(mainColors.black, 0.5),\n        },\n        withoutLabel: {\n            text: hexToRGBA(mainColors.black, 0.5),\n            border: mainColors.black,\n            chevron: mainColors.black,\n        },\n    },\n    scoremeter: {\n        meterStrokeColor: {\n            excellent: mainColors.green,\n            average: colorPalette.neoPaccha[400],\n            poor: colorPalette.warning[400],\n        },\n        meterStrokeBackground: 'transparent',\n        meterBorderColor: colorPalette.popWhite[200],\n        dotColor: colorPalette.popBlack[300],\n        indicatorColors: {\n            neutral: '#e2e2e2',\n            increment: '#5CDDBE',\n            decrement: '#FFB098',\n        },\n        scoreContainerBackground: colorPalette.popWhite[300],\n        scoreContainerBorder: colorPalette.popWhite[400],\n        scoreColor: mainColors.black,\n    },\n    tags: {\n        warning: {\n            background: '#FEF4EB',\n            color: mainColors.yellow,\n        },\n        error: {\n            background: '#FDEDEB',\n            color: mainColors.red,\n        },\n        success: {\n            background: '#E6F9F1',\n            color: mainColors.green,\n        },\n        info: {\n            background: '#EBF1FE',\n            color: mainColors.blue,\n        },\n    },\n    checkbox: {\n        background: mainColors.white,\n        border: mainColors.black,\n        leftPlunk: colorPalette.black[50],\n        topPlunk: colorPalette.white[50],\n    },\n    inputFields: {\n        textColor: hexToRGBA(mainColors.black, FontOpacity.HEADING),\n        labelColor: hexToRGBA(mainColors.black, FontOpacity.BODY_TEXT),\n        caretColor: mainColors.blue,\n        errorColor: mainColors.red,\n        placeholderColor: hexToRGBA(mainColors.black, 0.3),\n    },\n    buttons: {\n        primary: {\n            backgroundColor: mainColors.white,\n            color: mainColors.black,\n            edgeColors: {\n                bottom: colorPalette.black[50],\n                right: colorPalette.white[50],\n                top: colorPalette.popBlack[200],\n                left: colorPalette.popBlack[100],\n            },\n            disabledColors: {\n                backgroundColor: colorPalette.popBlack[100],\n                color: hexToRGBA(mainColors.white, 0.5),\n                edgeColors: {\n                    top: 'transparent',\n                    left: 'transparent',\n                    right: '#B6B6B6',\n                    bottom: colorPalette.popBlack[200],\n                },\n            },\n        },\n        secondary: {\n            backgroundColor: mainColors.black,\n            color: mainColors.white,\n            borderColor: mainColors.white,\n            edgeColors: {\n                bottom: colorPalette.black[50],\n                top: '#262626',\n                right: colorPalette.white[50],\n                left: '#404040',\n            },\n            disabledColors: {\n                backgroundColor: mainColors.black,\n                color: hexToRGBA(mainColors.white, 0.3),\n                borderColor: hexToRGBA(mainColors.white, 0.3),\n                edgeColors: {\n                    top: 'transparent',\n                    left: 'transparent',\n                    right: 'transparent',\n                    bottom: 'transparent',\n                },\n            },\n        },\n    },\n    toggle: {\n        on: {\n            switchBackground: '#CAFFE2',\n            switchBorder: '#0a0a0a',\n            buttonBackground: '#38b36f',\n            buttonBorder: '#F7F7F7',\n            buttonMarkBackground: mainColors.white,\n        },\n        off: {\n            switchBackground: mainColors.white,\n            switchBorder: '#0a0a0a',\n            buttonBackground: colorPalette.white[50],\n            buttonBorder: mainColors.white,\n            buttonMarkBackground: mainColors.white,\n        },\n    },\n    radio: {\n        background: mainColors.white,\n        border: mainColors.black,\n        plunk: colorPalette.black[50],\n        dotBackground: mainColors.white,\n        containerConfig: {\n            color: mainColors.black,\n            backgroundColor: colorPalette.black[100],\n            borderColor: hexToRGBA(mainColors.white, 0.1),\n            activeBackgroundColor: colorPalette.poliPurple[500],\n            activeBorderColor: '#2C5ECD',\n        },\n    },\n});\n\nconst getColorGuide = () => ({\n    mainAppBackground: mainColors.black,\n    darkComponents: getDarkThemedColors(),\n    lightComponents: getLightThemedColors(),\n});\n\nexport let colorGuide = getColorGuide();\n\ninterface UserTheme {\n    mainColors?: typeof mainColors;\n    colorGuide?: typeof colorGuide;\n    colorPalette?: typeof colorPalette;\n}\n\nexport const extend = (themeOverwrite: UserTheme) => {\n    const {\n        mainColors: userMainColors = {},\n        colorGuide: userColorGuide = {},\n        colorPalette: userColorPalette = {},\n    } = themeOverwrite;\n\n    mainColors = Object.freeze(mergeDeep({}, mainColors, userMainColors));\n    colorPalette = Object.freeze(mergeDeep({}, colorPalette, userColorPalette));\n    colorGuide = Object.freeze(mergeDeep({}, getColorGuide(), userColorGuide));\n};\n"]},"metadata":{},"sourceType":"module"}