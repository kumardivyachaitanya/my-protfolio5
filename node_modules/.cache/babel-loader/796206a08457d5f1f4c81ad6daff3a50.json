{"ast":null,"code":"var FontType;\n(function (FontType) {\n  FontType[\"HEADING\"] = \"heading\";\n  FontType[\"CAPS\"] = \"caps\";\n  FontType[\"BODY\"] = \"body\";\n  FontType[\"SERIF_HEADING\"] = \"serif-heading\";\n})(FontType || (FontType = {}));\nvar FontWeights;\n(function (FontWeights) {\n  FontWeights[FontWeights[\"EXTRA_BOLD\"] = 800] = \"EXTRA_BOLD\";\n  FontWeights[FontWeights[\"BOLD\"] = 700] = \"BOLD\";\n  FontWeights[FontWeights[\"SEMI_BOLD\"] = 600] = \"SEMI_BOLD\";\n  FontWeights[FontWeights[\"MEDIUM\"] = 500] = \"MEDIUM\";\n  FontWeights[FontWeights[\"REGULAR\"] = 400] = \"REGULAR\";\n  FontWeights[FontWeights[\"THIN\"] = 300] = \"THIN\";\n})(FontWeights || (FontWeights = {}));\nvar FontOverflowType;\n(function (FontOverflowType) {\n  FontOverflowType[\"ELLIPSIS\"] = \"ellipsis\";\n  FontOverflowType[\"CLIP\"] = \"clip\";\n})(FontOverflowType || (FontOverflowType = {}));\nexport { FontOverflowType, FontType, FontWeights };","map":{"version":3,"mappings":"AAAA,IAAYA;WAAAA;EAAAA;EAAAA;EAAAA;EAAAA;AAAAA;AAOZ,IAAYC;WAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;AAAAA;AASZ,IAAYC;WAAAA;EAAAA;EAAAA;AAAAA","names":["FontType","FontWeights","FontOverflowType"],"sources":["/Users/kumardivyachaitanya/Documents/web devlopment/portfolio-1/node_modules/@cred/neopop-web/src/components/Typography/types.ts"],"sourcesContent":["export enum FontType {\n    HEADING = 'heading',\n    CAPS = 'caps',\n    BODY = 'body',\n    SERIF_HEADING = 'serif-heading',\n}\n\nexport enum FontWeights {\n    EXTRA_BOLD = 800,\n    BOLD = 700,\n    SEMI_BOLD = 600,\n    MEDIUM = 500,\n    REGULAR = 400,\n    THIN = 300,\n}\n\nexport enum FontOverflowType {\n    ELLIPSIS = 'ellipsis',\n    CLIP = 'clip',\n}\n\nexport interface TypographyProps {\n    /**\n     * Typography Variant?\n     */\n    fontType: FontType;\n    /**\n     * Text Content?\n     */\n    children: React.ReactNode;\n    /**\n     * Text Color?\n     */\n    color?: string;\n    /**\n     * Font Weight?\n     */\n    fontWeight: FontWeights;\n    /**\n     * Font Size?\n     */\n    fontSize: number;\n    /**\n     * CSS Styles\n     */\n    style?: React.CSSProperties;\n    /**\n     * text-overflow?\n     */\n    overflow?: FontOverflowType;\n    /**\n     * ellipsis line-clamp?\n     */\n    lineClamp?: number;\n    /**\n     * as paragraph/span?\n     */\n    as?: 'p' | 'span';\n}\n"]},"metadata":{},"sourceType":"module"}