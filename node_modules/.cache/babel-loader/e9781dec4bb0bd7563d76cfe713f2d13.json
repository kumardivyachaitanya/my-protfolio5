{"ast":null,"code":"import { colorGuide } from './colors.js';\nvar Bureaus;\n(function (Bureaus) {\n  Bureaus[\"crif\"] = \"crif\";\n  Bureaus[\"experian\"] = \"experian\";\n  Bureaus[\"equifax\"] = \"equifax\";\n})(Bureaus || (Bureaus = {}));\nvar scoreConfig = {\n  excellent: {\n    type: 'excellent',\n    text: 'Excellent'\n  },\n  average: {\n    type: 'average',\n    text: 'Good'\n  },\n  poor: {\n    type: 'poor',\n    text: 'Poor'\n  }\n};\nvar getTypeAndText = function getTypeAndText(score, bureau) {\n  if (bureau === Bureaus.experian && score < 850) {\n    return score >= 750 ? scoreConfig.average : scoreConfig.poor;\n  } else if (bureau === Bureaus.crif && score < 770) {\n    return score >= 600 ? scoreConfig.average : scoreConfig.poor;\n  } else if (score < 780) {\n    return score >= 690 ? scoreConfig.average : scoreConfig.poor;\n  }\n  return scoreConfig.excellent;\n};\nvar darkScoreMeter = function darkScoreMeter(score, bureau) {\n  return {\n    colorMode: 'dark',\n    reading: score,\n    colorConfig: colorGuide.darkComponents.scoremeter,\n    type: getTypeAndText(score, bureau).type,\n    scoreDesc: getTypeAndText(score, bureau).text\n  };\n};\nvar lightScoreMeter = function lightScoreMeter(score, bureau, oldScore) {\n  return {\n    colorMode: 'light',\n    reading: score,\n    oldReading: oldScore,\n    colorConfig: colorGuide.lightComponents.scoremeter,\n    type: getTypeAndText(score, bureau).type,\n    showIndicators: true,\n    scoreDesc: getTypeAndText(score, bureau).text\n  };\n};\nvar getScoreMeterConfig = {\n  lightScoreMeter: lightScoreMeter,\n  darkScoreMeter: darkScoreMeter\n};\nexport { Bureaus, getScoreMeterConfig, getTypeAndText };","map":{"version":3,"mappings":";AACA,IAAYA;WAAAA;EAAAA;EAAAA;EAAAA;AAAAA;AAMZ,IAAMC,WAAW,GAAG;EAChBC,SAAS,EAAE;IACPC,IAAI,EAAE,WADC;IAEPC,IAAI,EAAE;GAHM;EAKhBC,OAAO,EAAE;IACLF,IAAI,EAAE,SADD;IAELC,IAAI,EAAE;GAPM;EAShBE,IAAI,EAAE;IACFH,IAAI,EAAE,MADJ;IAEFC,IAAI,EAAE;EAFJ;AATU,CAApB;AAeO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAgBC,MAAhB,EAAmC;EAC7D,IAAIA,MAAM,KAAKT,OAAO,CAACU,QAAnB,IAA+BF,KAAK,GAAG,GAA3C,EAAgD;IAC5C,OAAOA,KAAK,IAAI,GAAT,GAAeP,WAAW,CAACI,OAA3B,GAAqCJ,WAAW,CAACK,IAAxD;GADJ,MAEO,IAAIG,MAAM,KAAKT,OAAO,CAACW,IAAnB,IAA2BH,KAAK,GAAG,GAAvC,EAA4C;IAC/C,OAAOA,KAAK,IAAI,GAAT,GAAeP,WAAW,CAACI,OAA3B,GAAqCJ,WAAW,CAACK,IAAxD;EACH,CAFM,MAEA,IAAIE,KAAK,GAAG,GAAZ,EAAiB;IACpB,OAAOA,KAAK,IAAI,GAAT,GAAeP,WAAW,CAACI,OAA3B,GAAqCJ,WAAW,CAACK,IAAxD;EACH;EAED,OAAOL,WAAW,CAACC,SAAnB;AACH;AAED,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,KAAD,EAAgBC,MAAhB;EAAA,OAA6D;IAChFI,SAAS,EAAE,MADqE;IAEhFC,OAAO,EAAEN,KAFuE;IAGhFO,WAAW,EAAEC,UAAU,CAACC,cAAX,CAA0BC,UAHyC;IAIhFf,IAAI,EAAEI,cAAc,CAACC,KAAD,EAAQC,MAAR,CAAd,CAA8BN,IAJ4C;IAKhFgB,SAAS,EAAEZ,cAAc,CAACC,KAAD,EAAQC,MAAR,CAAd,CAA8BL;GALtB;AAAA,CAAvB;AAQA,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CACpBZ,KADoB,EAEpBC,MAFoB,EAGpBY,QAHoB;EAAA,OAIlB;IACFR,SAAS,EAAE,OADT;IAEFC,OAAO,EAAEN,KAFP;IAGFc,UAAU,EAAED,QAHV;IAIFN,WAAW,EAAEC,UAAU,CAACO,eAAX,CAA2BL,UAJtC;IAKFf,IAAI,EAAEI,cAAc,CAACC,KAAD,EAAQC,MAAR,CAAd,CAA8BN,IALlC;IAMFqB,cAAc,EAAE,IANd;IAOFL,SAAS,EAAEZ,cAAc,CAACC,KAAD,EAAQC,MAAR,CAAd,CAA8BL;GAXrB;AAAA,CAAxB;AAcO,IAAMqB,mBAAmB,GAAG;EAC/BL,eAAe,EAAfA,eAD+B;EAE/BR,cAAc,EAAdA;AAF+B","names":["Bureaus","scoreConfig","excellent","type","text","average","poor","getTypeAndText","score","bureau","experian","crif","darkScoreMeter","colorMode","reading","colorConfig","colorGuide","darkComponents","scoremeter","scoreDesc","lightScoreMeter","oldScore","oldReading","lightComponents","showIndicators","getScoreMeterConfig"],"sources":["/Users/kumardivyachaitanya/Documents/web devlopment/portfolio-1/node_modules/@cred/neopop-web/src/primitives/scoremeter.ts"],"sourcesContent":["import { colorGuide } from '@primitives/colors';\nexport enum Bureaus {\n    crif = 'crif',\n    experian = 'experian',\n    equifax = 'equifax',\n}\n\nconst scoreConfig = {\n    excellent: {\n        type: 'excellent',\n        text: 'Excellent',\n    },\n    average: {\n        type: 'average',\n        text: 'Good',\n    },\n    poor: {\n        type: 'poor',\n        text: 'Poor',\n    },\n};\n\nexport const getTypeAndText = (score: number, bureau: string) => {\n    if (bureau === Bureaus.experian && score < 850) {\n        return score >= 750 ? scoreConfig.average : scoreConfig.poor;\n    } else if (bureau === Bureaus.crif && score < 770) {\n        return score >= 600 ? scoreConfig.average : scoreConfig.poor;\n    } else if (score < 780) {\n        return score >= 690 ? scoreConfig.average : scoreConfig.poor;\n    }\n\n    return scoreConfig.excellent;\n};\n\nconst darkScoreMeter = (score: number, bureau: 'crif' | 'experian' | 'equifax') => ({\n    colorMode: 'dark',\n    reading: score,\n    colorConfig: colorGuide.darkComponents.scoremeter,\n    type: getTypeAndText(score, bureau).type,\n    scoreDesc: getTypeAndText(score, bureau).text,\n});\n\nconst lightScoreMeter = (\n    score: number,\n    bureau: 'crif' | 'experian' | 'equifax',\n    oldScore: number,\n) => ({\n    colorMode: 'light',\n    reading: score,\n    oldReading: oldScore,\n    colorConfig: colorGuide.lightComponents.scoremeter,\n    type: getTypeAndText(score, bureau).type,\n    showIndicators: true,\n    scoreDesc: getTypeAndText(score, bureau).text,\n});\n\nexport const getScoreMeterConfig = {\n    lightScoreMeter,\n    darkScoreMeter,\n};\n"]},"metadata":{},"sourceType":"module"}